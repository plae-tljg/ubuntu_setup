define("discourse/plugins/discourse-policy/discourse/components/modal/policy-builder",["exports","@glimmer/component","@glimmer/tracking","@ember/helper","@ember/object","@ember/utils","@ember-compat/tracked-built-ins","discourse/components/d-button","discourse/components/d-modal","discourse/lib/ajax","discourse/lib/text","discourse-i18n","discourse/plugins/discourse-policy/discourse/components/policy-builder-form","@ember/component","@ember/template-factory"],function(e,t,o,i,s,c,n,l,r,p,a,u,d,y,m){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class _ extends t.default{static{dt7948.g(this.prototype,"isSaving",[o.tracked],function(){return!1})}#e=void dt7948.i(this,"isSaving")
static{dt7948.g(this.prototype,"flash",[o.tracked])}#t=void dt7948.i(this,"flash")
policy=this.args.model.policy||new n.TrackedObject({reminder:null,version:1})
insertPolicy(){this.validateForm()&&(this.args.model.toolbarEvent?.addText(`\n\n[policy ${this.markdownParams}]\n${(0,u.i18n)("discourse_policy.accept_policy_template")}\n[/policy]\n\n`),this.args.closeModal())}static{dt7948.n(this.prototype,"insertPolicy",[s.action])}async updatePolicy(){if(this.validateForm()){this.isSaving=!0
try{const e=await(0,p.ajax)(`/posts/${this.args.model.post.id}`),t=this.replaceRaw(e.raw)
t&&this.args.model.post.save({raw:t,cooked:(await(0,a.cook)(e.raw)).toString(),edit_reason:(0,u.i18n)("discourse_policy.edit_reason")})}finally{this.isSaving=!1,this.args.closeModal()}}}static{dt7948.n(this.prototype,"updatePolicy",[s.action])}get markdownParams(){const e=[]
for(const[t,o]of Object.entries(this.policy))(0,c.isPresent)(o)&&e.push(`${t}="${o}"`)
return e.join(" ")}replaceRaw(e){const t=new RegExp("\\[policy\\s(.*?)\\]","m"),o=e.match(t)
return!!o?.[1]&&e.replace(t,`[policy ${this.markdownParams}]`)}validateForm(){return(0,c.isBlank)(this.policy.groups)?(this.flash=(0,u.i18n)("discourse_policy.builder.errors.group"),!1):!(0,c.isBlank)(this.policy.version)||(this.flash=(0,u.i18n)("discourse_policy.builder.errors.version"),!1)}static{(0,y.setComponentTemplate)((0,m.createTemplateFactory)({id:"RlsHX5Wh",block:'[[[1,"\\n    "],[8,[32,0],[[24,0,"policy-builder"]],[["@title","@closeModal","@flash","@flashType"],[[28,[32,1],["discourse_policy.builder.title"],null],[30,1],[30,0,["flash"]],"error"]],[["body","footer"],[[[[1,"\\n        "],[8,[32,2],null,[["@policy","@onChange"],[[30,0,["policy"]],[28,[32,3],[[32,4],[30,0,["policy"]]],null]]],null],[1,"\\n      "]],[]],[[[1,"\\n"],[41,[30,2,["insertMode"]],[[[1,"          "],[8,[32,5],[[24,0,"btn-primary"]],[["@label","@action"],["discourse_policy.builder.insert",[30,0,["insertPolicy"]]]],null],[1,"\\n"]],[]],[[[1,"          "],[8,[32,5],[[24,0,"btn-primary"]],[["@label","@action","@isLoading"],["discourse_policy.builder.save",[30,0,["updatePolicy"]],[30,0,["isSaving"]]]],null],[1,"\\n"]],[]]],[1,"      "]],[]]]]],[1,"\\n  "]],["@closeModal","@model"],false,["if"]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/modal/policy-builder.js",scope:()=>[r.default,u.i18n,d.default,i.fn,s.set,l.default],isStrictMode:!0}),this)}}e.default=_}),define("discourse/plugins/discourse-policy/discourse/components/policy-builder-form",["exports","@glimmer/component","@ember/helper","@ember/modifier","@ember/object","discourse/plugins/discourse-policy/discourse/components/policy-form-field","discourse/plugins/discourse-policy/discourse/components/policy-group-input","discourse/plugins/discourse-policy/discourse/components/policy-reminder-input","@ember/component","@ember/template-factory"],function(e,t,o,i,s,c,n,l,r,p){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class a extends t.default{changeValue(e,t){this.args.onChange(e,t.target.value)}static{dt7948.n(this.prototype,"changeValue",[s.action])}changeBoolValue(e,t){this.args.onChange(e,t.target.checked)}static{dt7948.n(this.prototype,"changeBoolValue",[s.action])}static{(0,r.setComponentTemplate)((0,p.createTemplateFactory)({id:"+3h7/ZqU",block:'[[[1,"\\n    "],[8,[32,0],null,[["@name","@required"],["groups",true]],[["default"],[[[[1,"\\n      "],[8,[32,1],null,[["@groups","@onChangeGroup"],[[30,1,["groups"]],[28,[32,2],[[30,2],"groups"],null]]],null],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name","@required"],["version",true]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,3,"version"],[16,2,[28,[31,0],[[30,1,["version"]]],null]],[24,4,"number"],[4,[32,3],["input",[28,[32,2],[[30,0,["changeValue"]],"version"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["renew"]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,3,"renew"],[16,2,[28,[31,0],[[30,1,["renew"]]],null]],[24,4,"number"],[4,[32,3],["input",[28,[32,2],[[30,0,["changeValue"]],"renew"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["renew-start"]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,"placeholder","2020-03-31"],[24,3,"renew-start"],[16,2,[28,[31,0],[[28,[32,4],[[30,1],"renew-start"],null]],null]],[24,4,"date"],[4,[32,3],["input",[28,[32,2],[[30,0,["changeValue"]],"renew-start"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["reminder"]],[["default"],[[[[1,"\\n      "],[8,[32,5],null,[["@reminder","@onChangeReminder"],[[30,1,["reminder"]],[28,[32,2],[[30,2],"reminder"],null]]],null],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["accept"]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,3,"accept"],[16,2,[28,[31,0],[[30,1,["accept"]]],null]],[24,4,"text"],[4,[32,3],["input",[28,[32,2],[[30,0,["changeValue"]],"accept"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["revoke"]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,3,"revoke"],[16,2,[28,[31,0],[[30,1,["revoke"]]],null]],[24,4,"text"],[4,[32,3],["input",[28,[32,2],[[30,0,["changeValue"]],"revoke"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["add-users-to-group"]],[["default"],[[[[1,"\\n      "],[8,[32,1],null,[["@groups","@onChangeGroup"],[[28,[32,4],[[30,1],"add-users-to-group"],null],[28,[32,2],[[30,2],"add-users-to-group"],null]]],null],[1,"\\n    "]],[]]]]],[1,"\\n\\n    "],[8,[32,0],null,[["@name"],["private"]],[["default"],[[[[1,"\\n      "],[11,"input"],[24,3,"private"],[16,"checked",[28,[31,0],[[30,1,["private"]]],null]],[24,4,"checkbox"],[4,[32,3],["click",[28,[32,2],[[30,0,["changeBoolValue"]],"private"],null]],null],[12],[13],[1,"\\n    "]],[]]]]],[1,"\\n  "]],["@policy","@onChange"],false,["readonly"]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/policy-builder-form.js",scope:()=>[c.default,n.default,o.fn,i.on,s.get,l.default],isStrictMode:!0}),this)}}e.default=a}),define("discourse/plugins/discourse-policy/discourse/components/policy-form-field",["exports","@ember/helper","discourse-i18n","@ember/component","@ember/template-factory","@ember/component/template-only"],function(e,t,o,i,s,c){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const n=(0,i.setComponentTemplate)((0,s.createTemplateFactory)({id:"zNKlka3G",block:'[[[1,"\\n  "],[10,0],[15,0,[29,["policy-field ",[30,1]]]],[12],[1,"\\n    "],[10,0],[14,0,"policy-field-label"],[12],[1,"\\n      "],[10,1],[14,0,"label"],[12],[1,"\\n        "],[1,[28,[32,0],[[28,[32,1],["discourse_policy.builder.",[30,1],".label"],null]],null]],[1,"\\n"],[41,[30,2],[[[1,"          "],[10,1],[14,0,"required-field"],[12],[1,"*"],[13],[1,"\\n"]],[]],null],[1,"      "],[13],[1,"\\n    "],[13],[1,"\\n\\n    "],[10,0],[14,0,"policy-field-control"],[12],[1,"\\n      "],[18,3,null],[1,"\\n    "],[13],[1,"\\n\\n    "],[10,1],[14,0,"policy-field-description"],[12],[1,"\\n      "],[10,1],[14,0,"description"],[12],[1,"\\n        "],[1,[28,[32,0],[[28,[32,1],["discourse_policy.builder.",[30,1],".description"],null]],null]],[1,"\\n      "],[13],[1,"\\n    "],[13],[1,"\\n  "],[13],[1,"\\n"]],["@name","@required","&default"],false,["if","yield"]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/policy-form-field.js",scope:()=>[o.i18n,t.concat],isStrictMode:!0}),(0,c.default)(void 0,"policy-form-field:PolicyFormFields"))
e.default=n}),define("discourse/plugins/discourse-policy/discourse/components/policy-group-input",["exports","@glimmer/component","@ember/object","@ember/service","select-kit/components/group-chooser","@ember/component","@ember/template-factory"],function(e,t,o,i,s,c,n){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class l extends t.default{static{dt7948.g(this.prototype,"site",[i.service])}#o=void dt7948.i(this,"site")
get selectedGroups(){return(this.args.groups||"").split(",").filter(Boolean)}get availableGroups(){return(this.site.groups||[]).map(e=>0===e.id?null:e.name).filter(Boolean)}onChange(e){this.args.onChangeGroup?.(e.join(","))}static{dt7948.n(this.prototype,"onChange",[o.action])}static{(0,c.setComponentTemplate)((0,n.createTemplateFactory)({id:"k+Z64mu9",block:'[[[1,"\\n    "],[8,[32,0],null,[["@content","@valueProperty","@nameProperty","@value","@onChange"],[[30,0,["availableGroups"]],null,null,[30,0,["selectedGroups"]],[30,0,["onChange"]]]],null],[1,"\\n  "]],[],false,[]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/policy-group-input.js",scope:()=>[s.default],isStrictMode:!0}),this)}}e.default=l}),define("discourse/plugins/discourse-policy/discourse/components/policy-reminder-input",["exports","@ember/helper","discourse-i18n","select-kit/components/combo-box","@ember/component","@ember/template-factory","@ember/component/template-only"],function(e,t,o,i,s,c,n){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const l=[{id:"daily",name:(0,o.i18n)("daily")},{id:"weekly",name:(0,o.i18n)("weekly")}],r=(0,s.setComponentTemplate)((0,c.createTemplateFactory)({id:"1eKJOaUI",block:'[[[1,"\\n  "],[8,[32,0],null,[["@value","@content","@options","@onChange"],[[30,1],[32,1],[28,[32,2],null,[["none"],["discourse_policy.builder.reminder.no_reminder"]]],[30,2]]],null],[1,"\\n"]],["@reminder","@onChangeReminder"],false,[]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/policy-reminder-input.js",scope:()=>[i.default,l,t.hash],isStrictMode:!0}),(0,n.default)(void 0,"policy-reminder-input:PolicyReminderInput"))
e.default=r}),define("discourse/plugins/discourse-policy/discourse/components/post-policy",["exports","@glimmer/component","@glimmer/tracking","@ember/modifier","@ember/object","@ember/service","truth-helpers","discourse/components/d-button","discourse/helpers/bound-avatar-template","discourse/helpers/d-icon","discourse/lib/ajax","discourse/lib/ajax-error","discourse/lib/decorators","discourse-i18n","discourse/plugins/discourse-policy/discourse/components/modal/policy-builder","@ember/component","@ember/template-factory"],function(e,t,o,i,s,c,n,l,r,p,a,u,d,y,m,_,h){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class f extends t.default{static{dt7948.g(this.prototype,"appEvents",[c.service])}#i=void dt7948.i(this,"appEvents")
static{dt7948.g(this.prototype,"currentUser",[c.service])}#s=void dt7948.i(this,"currentUser")
static{dt7948.g(this.prototype,"modal",[c.service])}#c=void dt7948.i(this,"modal")
static{dt7948.g(this.prototype,"isLoading",[o.tracked],function(){return!1})}#n=void dt7948.i(this,"isLoading")
static{dt7948.g(this.prototype,"showNotAccepted",[o.tracked],function(){return!1})}#l=void dt7948.i(this,"showNotAccepted")
constructor(){super(...arguments),this.post?.setProperties({policy_accepted_by:this.post?.policy_accepted_by||[],policy_not_accepted_by:this.post?.policy_not_accepted_by||[]}),this.appEvents.on("policy:changed",this,"policyChanged")}willDestroy(){super.willDestroy(...arguments),this.appEvents.off("policy:changed",this,"policyChanged")}get post(){return this.args.post}get policy(){return this.args.policy}async policyChanged(e){if(e.message.id!==this.post.id)return
const t=e.controller.get("model.postStream").findLoadedPost(e.message.id)
if(t){const e=await(0,a.ajax)(`/posts/${t.id}.json`)
this.post.setProperties({policy_can_accept:e.policy_can_accept,policy_can_revoke:e.policy_can_revoke,policy_accepted:e.policy_accepted,policy_revoked:e.policy_revoked,policy_not_accepted_by:e.policy_not_accepted_by||[],policy_not_accepted_by_count:e.policy_not_accepted_by_count,policy_accepted_by:e.policy_accepted_by||[],policy_accepted_by_count:e.policy_accepted_by_count})}}static{dt7948.n(this.prototype,"policyChanged",[d.bind])}get policyHasUsers(){return(this.post?.policy_not_accepted_by_count||0+this.post?.policy_accepted_by_count||0)>0}get acceptButtonClasses(){let e="accept btn-accept-policy"
return this.post?.policy_accepted&&!this.post?.policy_revoked||(e+=" btn-primary"),e}get revokeButtonClasses(){let e="revoke btn-revoke-policy"
return this.post?.policy_revoked&&!this.post?.policy_accepted||(e+=" btn-danger"),e}get remainingAcceptedUsers(){return(this.post?.policy_accepted_by_count||0)-(this.post?.policy_accepted_by||[]).length}get acceptedUsers(){return this.post?.policy_accepted_by||[]}get remainingNotAcceptedUsers(){return(this.post?.get("policy_not_accepted_by_count")||0)-(this.post?.get("policy_not_accepted_by")||[]).length}get notAcceptedUsers(){return this.post?.get("policy_not_accepted_by")||[]}get canManagePolicy(){return this.currentUser&&(this.currentUser.staff||this.currentUser.id===this.post?.get("user_id"))}revokePolicy(){this.post.policy_not_accepted_by.pushObject(this.currentUser),this.post.set("policy_not_accepted_by_count",this.post.policy_not_accepted_by_count+1)
const e=this.post.policy_accepted_by.findBy("id",this.currentUser.id)
e&&(this.post.policy_accepted_by.removeObject(e),this.post.set("policy_accepted_by_count",this.post.policy_accepted_by_count-1)),this.post.policy_can_accept!==this.post.policy_can_revoke&&this.post.setProperties({policy_can_accept:!0,policy_can_revoke:!1,policy_accepted:!1,policy_revoked:!0}),this._updatePolicy("unaccept",this.post.id)}static{dt7948.n(this.prototype,"revokePolicy",[s.action])}acceptPolicy(){this.post.policy_accepted_by.pushObject(this.currentUser),this.post.set("policy_accepted_by_count",this.post.policy_accepted_by_count+1)
const e=this.post.policy_not_accepted_by.findBy("id",this.currentUser.id)
e&&(this.post.policy_not_accepted_by.removeObject(e),this.post.set("policy_not_accepted_by_count",this.post.policy_not_accepted_by_count-1)),this.post.policy_can_accept!==this.post.policy_can_revoke&&this.post.setProperties({policy_can_accept:!1,policy_can_revoke:!0,policy_accepted:!0,policy_revoked:!1}),this._updatePolicy("accept",this.post.id)}static{dt7948.n(this.prototype,"acceptPolicy",[s.action])}async loadRemainingAcceptedUsers(e){e.preventDefault()
try{(await(0,a.ajax)("/policy/accepted",{data:{post_id:this.post.id,offset:this.post.policy_accepted_by.length}})).users.forEach(e=>{this.post.policy_accepted_by.pushObject(e)})}catch(t){(0,u.popupAjaxError)(t)}}static{dt7948.n(this.prototype,"loadRemainingAcceptedUsers",[s.action])}async loadRemainingNotAcceptedUsers(e){e.preventDefault()
try{(await(0,a.ajax)("/policy/accepted",{data:{post_id:this.post.id,offset:this.post.policy_not_accepted_by.length}})).users.forEach(e=>{this.post.policy_not_accepted_by.pushObject(e)})}catch(t){(0,u.popupAjaxError)(t)}}static{dt7948.n(this.prototype,"loadRemainingNotAcceptedUsers",[s.action])}editPolicy(){this.modal.show(m.default,{model:{insertMode:!1,post:this.post,policy:this.policy}})}static{dt7948.n(this.prototype,"editPolicy",[s.action])}toggleShowUsers(e){e.preventDefault(),this.showNotAccepted=!this.showNotAccepted}static{dt7948.n(this.prototype,"toggleShowUsers",[s.action])}async _updatePolicy(e,t){this.isLoading=!0
try{await(0,a.ajax)(`/policy/${e}`,{type:"PUT",data:{post_id:t}})}catch(o){(0,u.popupAjaxError)(o)}finally{this.isLoading=!1}}static{(0,_.setComponentTemplate)((0,h.createTemplateFactory)({id:"/j5UuImR",block:'[[[1,"\\n"],[41,[30,0,["post"]],[[[1,"      "],[10,0],[14,0,"policy-footer"],[12],[1,"\\n        "],[10,0],[14,0,"policy-actions"],[12],[1,"\\n"],[41,[30,0,["post","policy_can_accept"]],[[[1,"            "],[8,[32,0],[[16,0,[30,0,["acceptButtonClasses"]]]],[["@isLoading","@action","@translatedLabel","@icon"],[[30,0,["isLoading"]],[30,0,["acceptPolicy"]],[30,0,["policy","accept"]],[52,[30,0,["post","policy_accepted"]],"check"]]],null],[1,"\\n"]],[]],null],[1,"\\n"],[41,[30,0,["post","policy_can_revoke"]],[[[1,"            "],[8,[32,0],[[16,0,[30,0,["revokeButtonClasses"]]]],[["@isLoading","@action","@translatedLabel","@icon"],[[30,0,["isLoading"]],[30,0,["revokePolicy"]],[30,0,["policy","revoke"]],[52,[30,0,["post","policy_revoked"]],"check"]]],null],[1,"\\n"]],[]],null],[1,"        "],[13],[1,"\\n\\n        "],[10,0],[14,0,"user-lists"],[12],[1,"\\n"],[41,[28,[32,1],[[28,[32,2],[[30,0,["policyHasUsers"]]],null],[30,0,["post","policy_stats"]]],null],[[[1,"            "],[10,1],[14,0,"no-possible-users"],[12],[1,"\\n              "],[1,[28,[32,3],["discourse_policy.no_possible_users"],null]],[1,"\\n            "],[13],[1,"\\n"]],[]],null],[1,"\\n"],[41,[30,0,["post","policy_accepted_by_count"]],[[[1,"            "],[11,3],[24,6,""],[16,"title",[28,[32,3],["discourse_policy.accepted_tooltip"],null]],[24,0,"toggle toggle-accepted"],[4,[32,4],["click",[30,0,["toggleShowUsers"]]],null],[12],[1,"\\n              "],[10,1],[14,0,"user-count"],[12],[1,"\\n                "],[1,[30,0,["post","policy_accepted_by_count"]]],[1,"\\n              "],[13],[1,"\\n              "],[1,[28,[32,5],["user-check"],null]],[1,"\\n            "],[13],[1,"\\n\\n"],[41,[51,[30,0,["showNotAccepted"]]],[[[41,[30,0,["acceptedUsers","length"]],[[[1,"                "],[10,0],[14,0,"users accepted"],[12],[1,"\\n"],[42,[28,[31,3],[[28,[31,3],[[30,0,["acceptedUsers"]]],null]],null],null,[[[1,"                    "],[1,[28,[32,6],[[30,1,["avatar_template"]],"tiny"],null]],[1,"\\n"]],[1]],null],[1,"\\n"],[41,[30,0,["remainingAcceptedUsers"]],[[[1,"                    "],[11,3],[24,6,""],[24,0,"load-more-users"],[4,[32,4],["click",[30,0,["loadRemainingAcceptedUsers"]]],null],[12],[1,"\\n                      +\\n                      "],[1,[30,0,["remainingAcceptedUsers"]]],[1,"\\n                      "],[1,[28,[32,5],["user"],null]],[1,"\\n                    "],[13],[1,"\\n"]],[]],null],[1,"                "],[13],[1,"\\n"]],[]],null]],[]],null]],[]],null],[1,"\\n"],[41,[30,0,["post","policy_not_accepted_by_count"]],[[[1,"            "],[10,0],[14,0,"separator"],[12],[13],[1,"\\n\\n            "],[11,3],[24,6,""],[16,"title",[28,[32,3],["discourse_policy.not_accepted_tooltip"],null]],[24,0,"toggle toggle-not-accepted"],[4,[32,4],["click",[30,0,["toggleShowUsers"]]],null],[12],[1,"\\n              "],[10,1],[14,0,"user-count"],[12],[1,"\\n                "],[1,[30,0,["post","policy_not_accepted_by_count"]]],[1,"\\n              "],[13],[1,"\\n              "],[1,[28,[32,5],["user-xmark"],null]],[1,"\\n            "],[13],[1,"\\n\\n"],[41,[30,0,["showNotAccepted"]],[[[1,"              "],[10,0],[14,0,"users not-accepted"],[12],[1,"\\n"],[42,[28,[31,3],[[28,[31,3],[[30,0,["notAcceptedUsers"]]],null]],null],null,[[[1,"                  "],[1,[28,[32,6],[[30,2,["avatar_template"]],"tiny"],null]],[1,"\\n"]],[2]],null],[1,"\\n"],[41,[30,0,["remainingNotAcceptedUsers"]],[[[1,"                  "],[11,3],[24,6,""],[24,0,"load-more-users"],[4,[32,4],["click",[30,0,["loadRemainingNotAcceptedUsers"]]],null],[12],[1,"\\n                    +\\n                    "],[1,[30,0,["remainingNotAcceptedUsers"]]],[1,"\\n                    "],[1,[28,[32,5],["user"],null]],[1,"\\n                  "],[13],[1,"\\n"]],[]],null],[1,"              "],[13],[1,"\\n"]],[]],null]],[]],null],[1,"        "],[13],[1,"\\n\\n"],[41,[30,0,["canManagePolicy"]],[[[1,"          "],[8,[32,0],[[24,0,"no-text btn-default edit-policy-settings-btn"]],[["@action","@icon"],[[30,0,["editPolicy"]],"gear"]],null],[1,"\\n"]],[]],null],[1,"      "],[13],[1,"\\n"]],[]],null],[1,"  "]],["acceptedUser","notAcceptedUser"],false,["if","unless","each","-track-array"]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/components/post-policy.js",scope:()=>[l.default,n.and,n.not,y.i18n,i.on,p.default,r.default],isStrictMode:!0}),this)}}e.default=f}),define("discourse/plugins/discourse-policy/discourse/connectors/user-preferences-emails-pref-email-settings/preferences-policy-emails",["exports","@ember/helper","truth-helpers","discourse-i18n","select-kit/components/combo-box","@ember/component","@ember/template-factory","@ember/component/template-only"],function(e,t,o,i,s,c,n,l){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const r=[{name:(0,i.i18n)("discourse_policy.preferences.policy_emails.email_frequency_options.never"),value:"never"},{name:(0,i.i18n)("discourse_policy.preferences.policy_emails.email_frequency_options.when_away"),value:"when_away"},{name:(0,i.i18n)("discourse_policy.preferences.policy_emails.email_frequency_options.always"),value:"always"}],p=(0,c.setComponentTemplate)((0,n.createTemplateFactory)({id:"9k+1XAIr",block:'[[[1,"\\n  "],[10,"h3"],[12],[1,[28,[32,0],["discourse_policy.preferences.title"],null]],[13],[1,"\\n\\n  "],[10,0],[14,0,"control-group policy-setting controls-dropdown"],[12],[1,"\\n    "],[10,"label"],[14,"for","user_policy_email_frequency"],[12],[1,"\\n      "],[1,[28,[32,0],["discourse_policy.preferences.policy_emails.label"],null]],[1,"\\n    "],[13],[1,"\\n\\n    "],[8,[32,1],null,[["@valueProperty","@content","@value","@onChange","@id"],["value",[32,2],[30,1,["model","user_option","policy_email_frequency"]],[28,[32,3],[[28,[31,0],[[30,1,["model","user_option","policy_email_frequency"]]],null]],null],"user_policy_email_frequency"]],null],[1,"\\n\\n"],[41,[28,[32,4],[[30,1,["model","user_option","policy_email_frequency"]],"always"],null],[[[1,"      "],[10,0],[14,0,"control-instructions"],[12],[1,"\\n        "],[1,[28,[32,0],["discourse_policy.preferences.policy_emails.always_description"],null]],[1,"\\n      "],[13],[1,"\\n"]],[]],[[[41,[28,[32,4],[[30,1,["model","user_option","policy_email_frequency"]],"when_away"],null],[[[1,"      "],[10,0],[14,0,"control-instructions"],[12],[1,"\\n        "],[1,[28,[32,0],["discourse_policy.preferences.policy_emails.away_description"],null]],[1,"\\n      "],[13],[1,"\\n    "]],[]],null]],[]]],[1,"  "],[13],[1,"\\n"]],["@outletArgs"],false,["mut","if"]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/connectors/user-preferences-emails-pref-email-settings/preferences-policy-emails.js",scope:()=>[i.i18n,s.default,r,t.fn,o.eq],isStrictMode:!0}),(0,l.default)(void 0,"preferences-policy-emails:PreferencesPolicyEmails"))
e.default=p}),define("discourse/plugins/discourse-policy/discourse/initializers/add-policy-builder",["exports","discourse/lib/plugin-api","discourse/plugins/discourse-policy/discourse/components/modal/policy-builder"],function(e,t,o){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={name:"add-discourse-policy-builder",initialize(e){e.lookup("service:site-settings").policy_enabled&&(0,t.withPluginApi)(t=>function(e,t){const i=e.getCurrentUser(),s=t.lookup("service:site-settings"),c=t.lookup("service:modal")
i&&e.addComposerToolbarPopupMenuOption({label:"discourse_policy.builder.attach",icon:"file-signature",group:"insertions",action:e=>{c.show(o.default,{model:{insertMode:!0,post:null,toolbarEvent:e}})},condition:()=>!s.policy_restrict_to_staff_posts||i.staff})}(t,e))}}}),define("discourse/plugins/discourse-policy/discourse/initializers/extend-for-policy",["exports","@ember/object","discourse/lib/plugin-api","discourse/lib/utilities","discourse-i18n","discourse/plugins/discourse-policy/discourse/components/post-policy","@ember/component","@ember/template-factory","@ember/component/template-only"],function(e,t,o,i,s,c,n,l,r){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const p=[{name:"groups"},{name:"version"},{name:"renew"},{name:"renew-start",camelName:"renewStart"},{name:"reminder"},{name:"accept",default:(0,s.i18n)("discourse_policy.accept_policy"),escape:!0},{name:"revoke",default:(0,s.i18n)("discourse_policy.revoke_policy"),escape:!0},{name:"add-users-to-group",camelName:"addUsersToGroup"}],a=(0,n.setComponentTemplate)((0,l.createTemplateFactory)({id:"Ss96fqZL",block:'[[[1,"\\n  "],[8,[32,0],null,[["@post","@policy"],[[30,1,["post"]],[30,1,["policy"]]]],null],[1,"\\n"]],["@data"],false,[]]',moduleName:"/var/www/discourse/app/assets/javascripts/discourse/discourse/plugins/discourse-policy/discourse/initializers/extend-for-policy.js",scope:()=>[c.default],isStrictMode:!0}),(0,r.default)(void 0,"extend-for-policy:PolicyWrapper"))
function u(e){const o={}
return p.forEach(t=>{o[t.name]=e.dataset[t.camelName||t.name]||t.default||"",t.escape&&(o[t.name]=(0,i.escapeExpression)(o[t.name]))}),(!o.version||parseInt(o.version,10)<1)&&(o.version=1),o.private="true"===e.dataset.private,t.default.create(o)}function d(e,t){const o=e.querySelector(".policy")
if(!o)return
o.innerHTML=`<div class="policy-body">${o.innerHTML}</div>`
const i=t?.getModel()
if(!i){const e=document.createElement("div")
return e.classList.add("policy-preview"),e.innerText=(0,s.i18n)("discourse_policy.title"),void o.prepend(e)}t.renderGlimmer(o,a,{post:i,policy:u(o)})}e.default={name:"extend-for-policy",initialize(){(0,o.withPluginApi)(function(e){e.decorateCookedElement(d,{onlyStream:!1,id:"discourse-policy"}),e.registerCustomPostMessageCallback("policy_change",(e,t)=>{e.appEvents.trigger("policy:changed",{controller:e,message:t})})})}}}),define("discourse/plugins/discourse-policy/lib/discourse-markdown/policy",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.setup=function(e){e.allowList(["div.policy"]),e.registerOptions((e,t)=>{e.features.policy=!!t.policy_enabled}),e.registerPlugin(e=>{e.block.bbcode.ruler.push("policy",t)})}
const t={tag:"policy",wrap(e,t){if(!t.attrs.group&&!t.attrs.groups)return!1
e.attrs=[["class","policy"]],t.attrs.version||=1
for(let o of Object.keys(t.attrs).sort())e.attrs.push([`data-${o}`,t.attrs[o]])
return!0}}}),define("discourse/plugins/discourse-policy/pre-initializers/policy-user-options",["exports","discourse/controllers/preferences/emails","discourse/lib/plugin-api"],function(e,t,o){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const i="policy_email_frequency"
e.default={name:"policy-user-options",initialize(e){(0,o.withPluginApi)(t=>{e.lookup("service:site-settings").policy_enabled&&t.addSaveableUserOptionField(i)}),t.default.reopen({init(){this._super(...arguments),this.saveAttrNames.push(i)}})}}})

//# sourceMappingURL=discourse-policy-68dcc084.map