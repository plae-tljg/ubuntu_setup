define("discourse/plugins/spoiler-alert/initializers/spoiler-alert",["exports","discourse/lib/plugin-api","discourse/lib/to-markdown","discourse/plugins/spoiler-alert/lib/apply-spoiler","discourse/plugins/spoiler-alert/lib/rich-editor-extension"],function(e,t,i,o,r){"use strict"
function s(e){e.querySelectorAll(".spoiler").forEach(e=>{e.classList.remove("spoiler"),e.classList.add("spoiled"),(0,o.default)(e)})}function n(e){e.decorateCookedElement(s,{id:"spoiler-alert"}),e.addComposerToolbarPopupMenuOption({icon:"wand-magic",active:({state:e})=>e.inSpoiler,showActiveIcon:!0,label:"spoiler.title",action:e=>{e.commands?e.commands.toggleSpoiler():e.applySurround("[spoiler]","[/spoiler]","spoiler_text",{multiline:!1,useBlockMode:!0})}}),(0,i.addTagDecorateCallback)(function(){const{attributes:e}=this.element;/\bspoiled\b/.test(e.class)&&(this.prefix="[spoiler]",this.suffix="[/spoiler]")}),(0,i.addBlockDecorateCallback)(function(e){const{name:t,attributes:i}=this.element
if("div"===t&&/\bspoiled\b/.test(i.class))return this.prefix="[spoiler]\n",this.suffix="\n[/spoiler]",e.trim()}),e.registerRichEditorExtension(r.default)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,e.initializeSpoiler=n
e.default={name:"spoiler-alert",initialize(e){e.lookup("service:site-settings").spoiler_enabled&&(0,t.withPluginApi)(n)}}}),define("discourse/plugins/spoiler-alert/lib/apply-spoiler",["exports","discourse-i18n"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e){r(e),e.addEventListener("click",t=>{s(t,e)}),e.addEventListener("keydown",t=>{"Enter"===t.key&&s(t,e)})}
const i=["a","area","audio","button","details","embed","iframe","img.animated","input","map","object","option","portal","select","textarea","track","video",".lightbox"].join(", ")
function o(e,t){Object.entries(t).forEach(([t,i])=>{null===i?e.removeAttribute(t):e.setAttribute(t,i)})}function r(e){o(e,{role:"button",tabindex:"0","data-spoiler-state":"blurred","aria-expanded":!1,"aria-label":(0,t.i18n)("spoiler.label.show"),"aria-live":"polite"}),e.classList.add("spoiler-blurred"),Array.from(e.children).forEach(e=>{e.setAttribute("aria-hidden",!0)})}function s(e,t){"blurred"===t.getAttribute("data-spoiler-state")?(function(e){o(e,{"data-spoiler-state":"revealed","aria-expanded":!0,"aria-label":null,role:null}),e.classList.remove("spoiler-blurred"),Array.from(e.children).forEach(e=>{e.removeAttribute("aria-hidden")})}(t),e.preventDefault()):function(e){return e.defaultPrevented||e.target.closest(i)}(e)||window.getSelection()+""!=""||r(t)}}),define("discourse/plugins/spoiler-alert/lib/discourse-markdown/spoiler-alert",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.setup=function(e){e.allowList(["span.spoiler","div.spoiler"]),e.registerOptions((e,t)=>{e.features["spoiler-alert"]=!!t.spoiler_enabled}),e.registerPlugin(e=>{e.inline.bbcode.ruler.push("spoiler",{tag:"spoiler",wrap:"span.spoiler"}),e.block.bbcode.ruler.push("spoiler",{tag:"spoiler",wrap:"div.spoiler"})})}}),define("discourse/plugins/spoiler-alert/lib/rich-editor-extension",["exports","discourse-i18n"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const i=["inline_spoiler","spoiler"],o={nodeSpec:{spoiler:{attrs:{blurred:{default:!0}},group:"block",content:"block+",parseDOM:[{tag:"div.spoiled"}],toDOM:()=>["div",{class:"spoiled"},0]},inline_spoiler:{attrs:{blurred:{default:!0}},group:"inline",inline:!0,content:"inline*",parseDOM:[{tag:"span.spoiled"}],toDOM:()=>["span",{class:"spoiled"},0]}},parse:{bbcode_spoiler:{block:"inline_spoiler"},wrap_bbcode:(e,t)=>1===t.nesting&&"spoiler"===t.attrGet("class")?(e.openNode(e.schema.nodes.spoiler),!0):-1===t.nesting&&"spoiler"===e.top().type.name?(e.closeNode(),!0):void 0},serializeNode:{spoiler(e,t){e.write("[spoiler]\n"),e.renderContent(t),e.write("[/spoiler]\n\n")},inline_spoiler(e,t){e.write("[spoiler]"),e.renderInline(t),e.write("[/spoiler]")}},inputRules:({pmState:{TextSelection:e}})=>({match:/\[spoiler\]$/,handler:(i,o,r,s)=>{const{schema:n}=i,l=n.text((0,t.i18n)("composer.spoiler_text")),a=0===i.doc.resolve(r).parentOffset,p=i.tr
return a?p.replaceWith(r-1,s,n.nodes.spoiler.createAndFill(null,n.nodes.paragraph.createAndFill(null,l))):p.replaceWith(r,s,n.nodes.inline_spoiler.createAndFill(null,l)),p.setSelection(e.create(p.doc,r+1,r+1+l.nodeSize))}}),state:({utils:e,schema:t},o)=>({inSpoiler:i.some(i=>e.inNode(o,t.nodes[i]))}),commands:({schema:e,utils:o,pmState:{TextSelection:r},pmCommands:s})=>({toggleSpoiler:()=>(n,l,a)=>{const{selection:p}=n,{empty:d,$from:c,$to:u}=p
if(i.some(t=>o.inNode(n,e.nodes[t]))){for(let e=c.depth;e>0;e--){const t=c.node(e)
if(i.includes(t.type.name)){const i=c.before(e),o=i+t.nodeSize,r=n.tr.replaceWith(i,o,t.content)
return l?.(r),!0}}return!1}if(d){const i=e.text((0,t.i18n)("composer.spoiler_text")),o=a.endOfTextblock("backward")?e.nodes.spoiler.createAndFill(null,e.nodes.paragraph.createAndFill(null,i)):e.nodes.inline_spoiler.createAndFill(null,i),s=n.tr.replaceSelectionWith(o)
return s.setSelection(r.create(s.doc,c.pos+1,c.pos+1+i.nodeSize)),l?.(s),!0}if(c.parent===u.parent&&0===c.parentOffset&&u.parentOffset===c.parent.content.size&&c.parent.isBlock&&c.depth>0)return s.wrapIn(e.nodes.spoiler)(n,l)
const f=p.content()
if(f.openStart>0||f.openEnd>0){const t=[]
f.content.forEach(e=>e.isBlock?e.content.forEach(e=>t.push(e)):t.push(e))
const i=e.nodes.inline_spoiler.createAndFill(null,t),o=n.tr.replaceWith(c.pos,u.pos,i)
return o.setSelection(r.create(o.doc,c.pos+1,c.pos+1+i.content.size)),l?.(o),!0}return s.wrapIn(e.nodes.spoiler)(n,e=>{e.setSelection(r.create(e.doc,c.pos+2,u.pos)),l?.(e)})}}),plugins:({pmState:{Plugin:e},pmView:{Decoration:t,DecorationSet:o}})=>new e({props:{decorations(e){return this.getState(e)}},state:{init(e,r){const s=[]
return r.doc.descendants((e,o)=>(i.includes(e.type.name)&&s.push(t.node(o,o+e.nodeSize,{class:"spoiler-blurred"})),!0)),o.create(r.doc,s)},apply(e,r,s,n){if(e.getMeta(this))return e.getMeta(this)
if(r=r.map(e.mapping,e.doc),e.selectionSet||e.docChanged){const e=[],{selection:r}=n
return n.doc.descendants((o,s)=>{if(i.includes(o.type.name)){const i=s,n=s+o.nodeSize
r.from>i&&r.from<n||r.to>i&&r.to<n||r.from<=i&&r.to>=n||e.push(t.node(i,n,{class:"spoiler-blurred"}))}return!0}),o.create(n.doc,e)}return r}}})}
e.default=o})

//# sourceMappingURL=spoiler-alert-520c4c94.map